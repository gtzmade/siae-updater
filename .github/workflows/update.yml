name: Actualizar informe de licenciaturas

on:
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 1Ô∏è‚É£ Ejecutar el scraper
      - name: Ejecutar scraper (tolerante)
        run: |
          python scraper.py || echo "‚ö†Ô∏è scraper.py fall√≥, pero se contin√∫a con el flujo."

      # 2Ô∏è‚É£ Limpiar snapshot
      - name: Clean snapshot (tolerante)
        run: |
          python clean_snapshot.py || echo "‚ö†Ô∏è clean_snapshot.py fall√≥, pero se contin√∫a con el flujo."

      # 3Ô∏è‚É£ Actualizar Excel con diferencias
      - name: Diff & update Excel (tolerante)
        run: |
          python diff_and_update.py || echo "‚ö†Ô∏è diff_and_update.py fall√≥, pero se contin√∫a con el flujo."

      # 4Ô∏è‚É£ Crear Release p√∫blica con timestamp
      - name: Crear Release y subir el Excel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TS=$(date +"%Y%m%d-%H%M%S")
          OUT="PE_licenciatura_${TS}.xlsx"
          echo "üì¶ Archivo de salida: $OUT"
          echo "tag-pe-${TS}" >> $GITHUB_OUTPUT
          git add .
          git commit -m "auto: actualizaci√≥n semanal de planes de estudio" || echo "No hay cambios para commit"
          git push || echo "No hay cambios para subir"

          gh release create "pe-${TS}" $OUT --title "PE Licenciatura ‚Äì ${TS}" --notes "Actualizaci√≥n autom√°tica de planes de estudio" --repo $GITHUB_REPOSITORY --latest

      # 5Ô∏è‚É£ Enviar correo de notificaci√≥n con link p√∫blico
      - name: Enviar correo
        env:
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          FROM_PASSWORD: ${{ secrets.FROM_PASSWORD }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
        run: |
          python - <<'EOF'
          import smtplib
          from email.mime.text import MIMEText

          from_email = "${{ secrets.FROM_EMAIL }}"
          to_email = "${{ secrets.TO_EMAIL }}"
          password = "${{ secrets.FROM_PASSWORD }}"

          subject = "SIAE: Cambios detectados en planes de estudio"
          body = """\
          <html>
            <body>
              <p>Hola üëã<br><br>
              Se detectaron <b>cambios</b> en el cat√°logo de planes de estudio.<br><br>
              Se gener√≥ un nuevo Excel que ya est√° disponible p√∫blicamente en la √∫ltima Release.<br><br>
              üëâ <a href="https://github.com/gtzmade/siae-updater/releases/latest">Ver √∫ltima Release</a><br><br>
              ‚Äî Bot SIAE
              </p>
            </body>
          </html>
          """

          msg = MIMEText(body, 'html')
          msg['Subject'] = subject
          msg['From'] = from_email
          msg['To'] = to_email

          with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
              server.login(from_email, password)
              server.send_message(msg)

          print("üìß Correo enviado exitosamente.")
          EOF
