name: Actualizar informe de licenciaturas

on:
  schedule:
    # Corre el d√≠a 1 y 16 de cada mes a las 12:00 UTC (~06:00 hora de CDMX)
    - cron: "0 12 1,16 * *"
  workflow_dispatch: {}

permissions:
  contents: write   # necesario para crear Releases

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --- Ejecutar scripts principales (tolerante a fallos) ---
      - name: Run scraper (tolerante)
        run: |
          python scraper.py || echo "scraper failed, continuing"

      - name: Clean snapshot (tolerante)
        run: |
          python clean_snapshot.py || echo "clean failed, continuing"

      - name: Diff & update Excel (tolerante)
        run: |
          python diff_and_update.py || echo "diff/update failed, continuing"

      # --- Preparar Excel SIEMPRE ---
      - name: Prepare Excel asset
        id: prep
        shell: bash
        run: |
          SRC="19082025_PE Licenciatura_Informe anual - copia (1).xlsx"
          if [ ! -f "$SRC" ]; then
            echo "‚ùå No existe $SRC; nada que subir"
            echo "upload=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          TS=$(date -u +%Y%m%d-%H%M%S)
          OUT="PE_licenciatura_${TS}.xlsx"
          cp "$SRC" "$OUT"
          echo "upload=true"  >> "$GITHUB_OUTPUT"
          echo "file=${OUT}"  >> "$GITHUB_OUTPUT"
          echo "tag=pe-${TS}" >> "$GITHUB_OUTPUT"
          echo "ts=${TS}"     >> "$GITHUB_OUTPUT"

      # --- Paso de depuraci√≥n: listar los archivos generados ---
      - name: Listar archivos para depurar
        run: ls -lh *.xlsx || true

      # --- Crear Release SIEMPRE que haya archivo ---
      - name: Create GitHub Release & upload asset
        if: steps.prep.outputs.upload == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.prep.outputs.tag }}
          name: "PE Licenciatura ‚Äì ${{ steps.prep.outputs.ts }}"
          draft: false
          prerelease: false
          files: ${{ steps.prep.outputs.file }}

      # --- Enviar correo SIEMPRE que haya archivo (con adjunto) ---
      - name: Enviar correo con Excel adjunto
        if: steps.prep.outputs.upload == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "SIAE: Informe actualizado üìä"
          to: ${{ secrets.TO_EMAIL }}
          from: "${{ secrets.FROM_NAME }} <${{ secrets.SMTP_USERNAME }}>"
          content_type: text/html
          html_body: |
            <p>Hola üëã</p>
            <p>Se gener√≥ el informe y va <b>adjunto</b> en este correo.</p>
            <p>Tambi√©n est√° disponible p√∫blicamente aqu√≠:</p>
            <p><a href="https://github.com/${{ github.repository }}/releases/latest">üëâ Ver √∫ltima Release</a></p>
            <hr>
            <p>Repo: <code>${{ github.repository }}</code> ‚Ä¢ Run #${{ github.run_number }}</p>
          attachments: ${{ steps.prep.outputs.file }}

      # --- Mensaje si no se encontr√≥ el Excel base ---
      - name: Sin archivo base
        if: steps.prep.outputs.upload == 'false'
        run: echo "‚ö†Ô∏è No se encontr√≥ el Excel base; no se cre√≥ Release ni se envi√≥ correo."
